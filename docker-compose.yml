services:
  mongo:
    image: mongo
    restart: always
    volumes:
      - data:/data
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: letmein

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: letmein
      ME_CONFIG_MONGODB_URL: mongodb://root:letmein@mongo:27017/
      ME_CONFIG_BASICAUTH: false

  jupyter:
    image: dbsfdit/jupyter:2023.ss
    container_name: dbsfdit-jupyter
    ports:
      - "5678:8888"
    volumes:
      - ../namenode/map-reduce:/home/jovyan/map-reduce

  namenode:
    build:
      context: ./
      dockerfile: ./namenode/Dockerfile
    hostname: namenode
    command: [ "hdfs", "namenode" ]
    ports:
      - 9870:9870
    env_file:
      - hadoop.env
    environment:
      ENSURE_NAMENODE_DIR: "/tmp/hadoop-root/dfs/name"

  datanode:
    build:
      context: ./
      dockerfile: ./datanode/Dockerfile
    container_name: datanode
    command: [ "hdfs", "datanode" ]
    env_file:
      - hadoop.env

  resourcemanager:
    build:
      context: ./
      dockerfile: ./resourcemanager/Dockerfile
    container_name: resourcemanager
    hostname: resourcemanager
    command: [ "yarn", "resourcemanager" ]
    ports:
      - 8088:8088
    env_file:
      - hadoop.env
    volumes:
      - ./test.sh:/opt/test.sh

  nodemanager1:
    build:
      context: ./
      dockerfile: ./nodemanager/Dockerfile
    container_name: nodemanager
    command: [ "yarn", "nodemanager" ]
    env_file:
        - hadoop.env

#  historyserver:
#    image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
#    container_name: historyserver
#    restart: always
#    environment:
#      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
#    volumes:
#      - hadoop_historyserver:/hadoop/yarn/timeline
#    env_file:
#      - hadoop.env
#    networks:
#      - hadoop
#    platform: linux/amd64

volumes:
  data: {}
  hadoop_namenode:
  hadoop_datanode:
  # hadoop_historyserver:

#networks:
#  hadoop:
#    driver: bridge